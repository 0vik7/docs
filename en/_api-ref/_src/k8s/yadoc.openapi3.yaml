openapi: "3.0"
info:
  title: Yandex Managed Services for Kubernetes API
  description: This API reference is organized by resource. All actions are performed
    by sending HTTP requests to resource URLs. For more information about Yandex.Cloud
    API architecture, see [API Concepts](/docs/api-design-guide/).
  version: v1
  x-y-docUri: api-ref
  x-y-baseUrl: https://mks.api.cloud.yandex.net
paths:
  /managed-kubernetes/v1/clusters/{clusterId}:
    get:
      tags:
      - Cluster
      summary: Returns the specified Kubernetes cluster.
      description: To get the list of available Kubernetes cluster, make a [list](/docs/managed-kubernetes/api-ref/Cluster/list)
        request.
      operationId: ClusterGet
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Kubernetes cluster to return.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
      x-y-navtitle: get
    delete:
      tags:
      - Cluster
      summary: Deletes the specified Kubernetes cluster.
      operationId: ClusterDelete
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Kubernetes cluster to delete.
          To get Kubernetes cluster ID use a [list](/docs/managed-kubernetes/api-ref/Cluster/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteClusterMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - Cluster
      summary: Updates the specified Kubernetes cluster.
      operationId: ClusterUpdate
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Kubernetes cluster to update.
          To get the Kubernetes cluster ID use a [list](/docs/managed-kubernetes/api-ref/Cluster/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kubernetes/api-ref/Cluster#representation)'
  /managed-kubernetes/v1/clusters:
    get:
      tags:
      - Cluster
      summary: Retrieves the list of Kubernetes cluster in the specified folder.
      operationId: ClusterList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list Kubernetes cluster in.
          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-kubernetes/api-ref/Cluster/list#query_params),
          the service returns a [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-kubernetes/api-ref/Cluster/list#query_params) to the
          [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [Cluster.name](/docs/managed-kubernetes/api-ref/Cluster#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 1-61 characters long and match the regular expression `|[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClustersResponse'
      x-y-navtitle: list
    post:
      tags:
      - Cluster
      summary: Creates a Kubernetes cluster in the specified folder.
      operationId: ClusterCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateClusterMetadata'
      x-y-operation-response: '[Cluster](/docs/managed-kubernetes/api-ref/Cluster#representation)'
  /managed-kubernetes/v1/clusters/{clusterId}/nodeGroups:
    get:
      tags:
      - Cluster
      summary: Lists nodegroup for the specified Kubernetes cluster.
      operationId: ClusterListNodeGroups
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Kubernetes cluster to list node groups in.
          To get the Kubernetes cluster ID use a [list](/docs/managed-kubernetes/api-ref/Cluster/list) request.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#query_params),
          the service returns a [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#query_params) to the
          [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on [Cluster.name](/docs/managed-kubernetes/api-ref/Cluster#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterNodeGroupsResponse'
      x-y-navtitle: listNodeGroups
  /managed-kubernetes/v1/clusters/{clusterId}/operations:
    get:
      tags:
      - Cluster
      summary: Lists operations for the specified Kubernetes cluster.
      operationId: ClusterListOperations
      parameters:
      - name: clusterId
        in: path
        description: |-
          Required.
          ID of the Kubernetes cluster to list operations for.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/managed-kubernetes/api-ref/Cluster/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-kubernetes/api-ref/Cluster/listOperations#query_params) to the
          [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on [Cluster.name](/docs/managed-kubernetes/api-ref/Cluster#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListClusterOperationsResponse'
      x-y-navtitle: listOperations
  /managed-kubernetes/v1/nodeGroups/{nodeGroupId}:
    get:
      tags:
      - NodeGroup
      summary: Returns the specified node group.
      description: To get the list of available node group, make a [list](/docs/managed-kubernetes/api-ref/NodeGroup/list)
        request.
      operationId: NodeGroupGet
      parameters:
      - name: nodeGroupId
        in: path
        description: |-
          Required.
          ID of the node group to return.
          To get the node group ID use a [list](/docs/managed-kubernetes/api-ref/NodeGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeGroup'
      x-y-navtitle: get
    delete:
      tags:
      - NodeGroup
      summary: Deletes the specified node group.
      operationId: NodeGroupDelete
      parameters:
      - name: nodeGroupId
        in: path
        description: |-
          Required.
          ID of the node group to delete.
          To get node group ID use a [list](/docs/managed-kubernetes/api-ref/NodeGroup/list) request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: delete
      x-y-operation-metadata:
        $ref: '#/components/schemas/DeleteNodeGroupMetadata'
      x-y-operation-response: Empty
    patch:
      tags:
      - NodeGroup
      summary: Updates the specified node group.
      operationId: NodeGroupUpdate
      parameters:
      - name: nodeGroupId
        in: path
        description: |-
          Required.
          ID of the node group to update.
          To get the node group ID use a [list](/docs/managed-kubernetes/api-ref/NodeGroup/list) request.
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodeGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: update
      x-y-operation-metadata:
        $ref: '#/components/schemas/UpdateNodeGroupMetadata'
      x-y-operation-response: '[NodeGroup](/docs/managed-kubernetes/api-ref/NodeGroup#representation)'
  /managed-kubernetes/v1/nodeGroups:
    get:
      tags:
      - NodeGroup
      summary: Retrieves the list of node group in the specified Kubernetes cluster.
      operationId: NodeGroupList
      parameters:
      - name: folderId
        in: query
        description: |-
          Required.
          ID of the folder to list node groups in.
          To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page to return. If the number of available
          results is larger than [pageSize](/docs/managed-kubernetes/api-ref/NodeGroup/list#query_params),
          the service returns a [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/list#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-kubernetes/api-ref/NodeGroup/list#query_params) to the
          [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/list#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          The expression must specify:
          1. The field name. Currently you can use filtering only on [NodeGroup.name](/docs/managed-kubernetes/api-ref/NodeGroup#representation) field.
          2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
          3. The value. Must be 1-61 characters long and match the regular expression `|[a-z][-a-z0-9]{1,61}[a-z0-9]`.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodeGroupsResponse'
      x-y-navtitle: list
    post:
      tags:
      - NodeGroup
      summary: Creates a node group in the specified Kubernetes cluster.
      operationId: NodeGroupCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNodeGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
      x-y-navtitle: create
      x-y-operation-metadata:
        $ref: '#/components/schemas/CreateNodeGroupMetadata'
      x-y-operation-response: '[NodeGroup](/docs/managed-kubernetes/api-ref/NodeGroup#representation)'
  /managed-kubernetes/v1/nodeGroups/{nodeGroupId}/operations:
    get:
      tags:
      - NodeGroup
      summary: Lists operations for the specified node group.
      operationId: NodeGroupListOperations
      parameters:
      - name: nodeGroupId
        in: path
        description: |-
          Required.
          ID of the node group to list operations for.
        required: true
        schema:
          type: string
      - name: pageSize
        in: query
        description: |-
          The maximum number of results per page that should be returned. If the number of available
          results is larger than [pageSize](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#query_params), the service returns a [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#responses)
          that can be used to get the next page of results in subsequent list requests.
          Default value: 100.

          Acceptable values are 0 to 1000, inclusive.
        schema:
          type: string
          format: int64
      - name: pageToken
        in: query
        description: |-
          Page token. To get the next page of results, set [pageToken](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#query_params) to the
          [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#responses) returned by a previous list request.

          The maximum string length in characters is 100.
        schema:
          type: string
      - name: filter
        in: query
        description: |-
          A filter expression that filters resources listed in the response.
          Currently you can use filtering only on [NodeGroup.name](/docs/managed-kubernetes/api-ref/NodeGroup#representation) field.

          The maximum string length in characters is 1000.
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNodeGroupOperationsResponse'
      x-y-navtitle: listOperations
components:
  schemas:
    Cluster:
      description: A Kubernetes cluster.
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the Kubernetes cluster.
            type: string
          folderId:
            description: ID of the folder that the Kubernetes cluster belongs to.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          name:
            description: Name of the Kubernetes cluster.
            type: string
          description:
            description: Description of the Kubernetes cluster. 0-256 characters long.
            type: string
          labels:
            description: Resource labels as `key:value` pairs. Мaximum of 64 per resource.
            type: object
            additionalProperties:
              type: string
          status:
            $ref: '#/components/schemas/ClusterStatus'
            description: Status of the Kubernetes cluster.
          health:
            $ref: '#/components/schemas/ClusterHealth'
            description: Health of the Kubernetes cluster.
          networkId:
            description: ID of the network the Kubernetes cluster belongs to.
            type: string
          master:
            $ref: '#/components/schemas/Master'
            description: Properties of the master for the Kubernetes cluster.
          ipAllocationPolicy:
            $ref: '#/components/schemas/IPAllocationPolicy'
            description: Allocation policy for IP addresses of services and pods inside
              the Kubernetes cluster in different availability zones.
          serviceAccountId:
            description: Service account to be used for provisioning Compute Cloud
              and VPC resources for Kubernetes cluster.
            type: string
          nodeServiceAccountId:
            description: Service account to be used by the worker nodes of the Kubernetes
              cluster to access Container Registry or to push node logs and metrics.
            type: string
      - title: internet_gateway
        type: object
        maxProperties: 1
        properties:
          gatewayIpv4Address:
            description: |-
              Gateway IPv4 address.

              The maximum string length in characters is 15.
            type: string
    ClusterHealth:
      description: |2-
         - HEALTHY: Kubernetes cluster is alive and well.
         - UNHEALTHY: Kubernetes cluster is inoperable.
      type: string
      enum:
      - HEALTHY
      - UNHEALTHY
    ClusterStatus:
      description: |2-
         - PROVISIONING: Kubernetes cluster is waiting for resources to be allocated.
         - RUNNING: Kubernetes cluster is running.
         - RECONCILING: Kubernetes cluster is being reconciled.
         - STOPPING: Kubernetes cluster is being stopped.
         - STOPPED: Kubernetes cluster stopped.
         - DELETING: Kubernetes cluster is being deleted.
      type: string
      enum:
      - PROVISIONING
      - RUNNING
      - RECONCILING
      - STOPPING
      - STOPPED
      - DELETING
    CreateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Kubernetes cluster that is being created.
          type: string
    CreateClusterRequest:
      type: object
      allOf:
      - type: object
        properties:
          folderId:
            description: |-
              Required.
              ID of the folder to create a Kubernetes cluster in.
              To get the folder ID use a [list](/docs/resource-manager/api-ref/Folder/list) request.
            type: string
          name:
            description: |-
              Name of the Kubernetes cluster.
              The name must be unique within the folder.

              Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
          description:
            description: |-
              Description of the Kubernetes cluster.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Resource labels as `key:value` pairs.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
          networkId:
            description: |-
              Required.
              ID of the network.
            type: string
          masterSpec:
            $ref: '#/components/schemas/MasterSpec'
            description: |-
              Required.
              IP allocation policy of the Kubernetes cluster.
          ipAllocationPolicy:
            $ref: '#/components/schemas/IPAllocationPolicy'
            description: IP allocation policy of the Kubernetes cluster.
          serviceAccountId:
            description: |-
              Required.
              Service account to be used for provisioning Compute Cloud and VPC resources for Kubernetes cluster.
              Selected service account should have `edit` role on the folder where the Kubernetes cluster will be
              located and on the folder where selected network resides.
            type: string
          nodeServiceAccountId:
            description: |-
              Required.
              Service account to be used by the worker nodes of the Kubernetes cluster to access Container Registry or to push node logs and metrics.
            type: string
      - title: internet_gateway
        type: object
        maxProperties: 1
        properties:
          gatewayIpv4Address:
            description: Gateway IPv4 address.
            type: string
    CreateNodeGroupMetadata:
      type: object
      properties:
        nodeGroupId:
          description: ID of the node group that is being created.
          type: string
    CreateNodeGroupRequest:
      type: object
      properties:
        clusterId:
          description: |-
            Required.
            ID of the Kubernetes cluster to create a node group in.
            To get the Kubernetes cluster ID, use a [list](/docs/managed-kubernetes/api-ref/Cluster/list) request.
          type: string
        name:
          description: |-
            Name of the node group.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the node group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        nodeTemplate:
          $ref: '#/components/schemas/NodeTemplate_in_CreateNodeGroupRequest_nodeTemplate'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_CreateNodeGroupRequest_scalePolicy'
        allocationPolicy:
          $ref: '#/components/schemas/NodeGroupAllocationPolicy_in_CreateNodeGroupRequest_allocationPolicy'
    DeleteClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Kubernetes cluster that is being deleted.
          type: string
    DeleteNodeGroupMetadata:
      type: object
      properties:
        nodeGroupId:
          description: ID of the node group that is being deleted.
          type: string
    DiskSpec:
      type: object
      properties:
        diskTypeId:
          description: |-
            ID of the disk type.

            Value must match the regular expression `` |network-ssd|network-hdd ``.
          type: string
        diskSize:
          description: |-
            Size of the disk, specified in bytes.

            Acceptable values are 0 to 4398046511104, inclusive.
          type: string
          format: int64
    Empty:
      description: Empty JSON object `` {} ``.
      type: object
      maxProperties: 0
    ExternalAddressSpec:
      type: object
      properties: {}
    FieldMask:
      description: |-
        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    IPAllocationPolicy:
      type: object
      properties:
        clusterIpv4CidrBlock:
          description: |-
            CIDR block. IP range for allocating pod addresses.

            It should not overlap with any subnet in the network the Kubernetes cluster located in. Static routes will be
            set up for this CIDR blocks in node subnets.
          type: string
        serviceIpv4CidrBlock:
          description: |-
            CIDR block. IP range Kubernetes service Kubernetes cluster IP addresses will be allocated from.

            It should not overlap with any subnet in the network the Kubernetes cluster located in.
          type: string
    InternalAddressSpec:
      type: object
      properties:
        subnetId:
          description: ID of the subnet. If no ID is specified, and there only one
            subnet in specified zone, an address in this subnet will be allocated.
          type: string
    IpVersion:
      description: |2-
         - IPV4: IPv4 address, for example 192.168.0.0.
         - IPV6: IPv6 address, not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    ListClusterNodeGroupsResponse:
      type: object
      properties:
        nodeGroups:
          description: List of node groups for the specified Kubernetes cluster.
          type: array
          items:
            $ref: '#/components/schemas/NodeGroup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#query_params), use
            the [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#responses) as the value
            for the [pageToken](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listNodeGroups#responses) to continue paging through the results.
          type: string
    ListClusterOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified Kubernetes cluster.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-kubernetes/api-ref/Cluster/listOperations#query_params), use the [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listOperations#responses) as the value
            for the [pageToken](/docs/managed-kubernetes/api-ref/Cluster/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/listOperations#responses) to continue paging through the results.
          type: string
    ListClustersResponse:
      type: object
      properties:
        clusters:
          description: List of Kubernetes cluster.
          type: array
          items:
            $ref: '#/components/schemas/Cluster'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-kubernetes/api-ref/Cluster/list#query_params), use
            the [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/list#responses) as the value
            for the [pageToken](/docs/managed-kubernetes/api-ref/Cluster/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/managed-kubernetes/api-ref/Cluster/list#responses) to continue paging through the results.
          type: string
    ListNodeGroupOperationsResponse:
      type: object
      properties:
        operations:
          description: List of operations for the specified node group.
          type: array
          items:
            $ref: '#/components/schemas/Operation'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#query_params), use the [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#responses) as the value
            for the [pageToken](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#query_params) query parameter in the next list request.
            Each subsequent list request will have its own [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/listOperations#responses) to continue paging through the results.
          type: string
    ListNodeGroupsResponse:
      type: object
      properties:
        nodeGroups:
          description: List of node groups.
          type: array
          items:
            $ref: '#/components/schemas/NodeGroup'
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests. If the number of results
            is larger than [pageSize](/docs/managed-kubernetes/api-ref/NodeGroup/list#query_params), use
            the [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/list#responses) as the value
            for the [pageToken](/docs/managed-kubernetes/api-ref/NodeGroup/list#query_params) query parameter
            in the next list request. Each subsequent list request will have its own
            [nextPageToken](/docs/managed-kubernetes/api-ref/NodeGroup/list#responses) to continue paging through the results.
          type: string
    Master:
      type: object
      allOf:
      - type: object
        properties:
          version:
            description: Version of Kubernetes components that runs on the master.
            type: string
          endpoints:
            $ref: '#/components/schemas/MasterEndpoints'
            description: |-
              Endpoints of the master. Endpoints constitute of scheme and port (i.e. `https://ip-address:port`)
              and can be used by the clients to communicate with the Kubernetes API of the Kubernetes cluster.
          masterAuth:
            $ref: '#/components/schemas/MasterAuth'
            description: Master authentication parameters are used to establish trust
              between the master and a client.
      - title: master_type
        type: object
        maxProperties: 1
        properties:
          zonalMaster:
            $ref: '#/components/schemas/ZonalMaster'
            description: Parameters of the availability zone for the master.
    MasterAuth:
      type: object
      properties:
        clusterCaCertificate:
          description: PEM-encoded public certificate that is the root of trust for
            the Kubernetes cluster.
          type: string
    MasterEndpoints:
      type: object
      properties:
        internalV4Endpoint:
          description: Internal endpoint that can be used to connect to the master
            from cloud networks.
          type: string
        externalV4Endpoint:
          description: External endpoint that can be used to access Kubernetes cluster
            API from the internet (outside of the cloud).
          type: string
    MasterSpec:
      type: object
      allOf:
      - title: master_type
        type: object
        maxProperties: 1
        properties:
          zonalMasterSpec:
            $ref: '#/components/schemas/ZonalMasterSpec'
            description: Specification of the master availability zone.
    NodeAddressSpec:
      type: object
      properties:
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_NodeAddressSpec_oneToOneNatSpec'
    NodeGroup:
      type: object
      properties:
        id:
          description: ID of the node group.
          type: string
        clusterId:
          description: ID of the cluster that the node group belongs to.
          type: string
        createdAt:
          description: |-
            Creation timestamp.

            String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
          type: string
          format: date-time
        name:
          description: |-
            Name of the node group.
            The name is unique within the folder.
          type: string
        description:
          description: Description of the node group. 0-256 characters long.
          type: string
        labels:
          description: Resource labels as `key:value` pairs. Мaximum of 64 per resource.
          type: object
          additionalProperties:
            type: string
        status:
          $ref: '#/components/schemas/NodeGroupStatus_in_NodeGroup_status'
        nodeTemplate:
          $ref: '#/components/schemas/NodeTemplate_in_NodeGroup_nodeTemplate'
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_NodeGroup_scalePolicy'
        allocationPolicy:
          $ref: '#/components/schemas/NodeGroupAllocationPolicy_in_NodeGroup_allocationPolicy'
        instanceGroupId:
          description: ID of the managed instance group associated with this node
            group.
          type: string
        nodeVersion:
          description: Version of Kubernetes components that runs on the nodes.
          type: string
    NodeGroupAllocationPolicy:
      type: object
      properties:
        locations:
          description: List of locations where resources for the node group will be
            allocated.
          type: array
          items:
            $ref: '#/components/schemas/NodeGroupLocation'
    NodeGroupLocation:
      type: object
      properties:
        zoneId:
          description: |-
            Required.
            ID of the availability zone where the nodes may reside.
          type: string
        subnetId:
          description: ID of the subnet. If a network chosen for the Kubernetes cluster
            has only one subnet in the specified zone, subnet ID may be omitted.
          type: string
    NodeGroupStatus:
      description: |2-
         - PROVISIONING: Node group is waiting for resources to be allocated.
         - RUNNING: Node group is running.
         - RECONCILING: Node group is waiting for some work to be done, such as upgrading node software.
         - STOPPING: Node group is being stopped.
         - STOPPED: Node group stopped.
         - DELETING: Node group is being deleted.
      type: string
      enum:
      - PROVISIONING
      - RUNNING
      - RECONCILING
      - STOPPING
      - STOPPED
      - DELETING
    NodeTemplate:
      type: object
      properties:
        platformId:
          description: |-
            ID of the hardware platform configuration for the node.

            Value must match the regular expression `` |standard-v1|standard-v2 ``.
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_NodeTemplate_resourcesSpec'
        bootDiskSpec:
          $ref: '#/components/schemas/DiskSpec_in_NodeTemplate_bootDiskSpec'
        metadata:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 131072.
          type: object
          additionalProperties:
            type: string
        v4AddressSpec:
          $ref: '#/components/schemas/NodeAddressSpec_in_NodeTemplate_v4AddressSpec'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_NodeTemplate_schedulingPolicy'
    OneToOneNatSpec:
      type: object
      properties:
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNatSpec_ipVersion'
    Operation:
      description: An Operation resource. For more information, see [Operation](/docs/api-design-guide/concepts/operation).
      type: object
      allOf:
      - type: object
        properties:
          id:
            description: ID of the operation.
            type: string
          description:
            description: Description of the operation. 0-256 characters long.
            type: string
          createdAt:
            description: |-
              Creation timestamp.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          createdBy:
            description: ID of the user or service account who initiated the operation.
            type: string
          modifiedAt:
            description: |-
              The time when the Operation resource was last modified.

              String in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
            type: string
            format: date-time
          done:
            description: |-
              If the value is `false`, it means the operation is still in progress.
              If `true`, the operation is completed, and either `error` or `response` is available.
            type: boolean
            format: boolean
          metadata:
            description: |-
              Service-specific metadata associated with the operation.
              It typically contains the ID of the target resource that the operation is performed on.
              Any method that returns a long-running operation should document the metadata type, if any.
            type: object
      - title: result
        type: object
        maxProperties: 1
        properties:
          error:
            $ref: '#/components/schemas/rpcStatus'
            description: The error result of the operation in case of failure or cancellation.
          response:
            description: |-
              The normal response of the operation in case of success.
              If the original method returns no data on success, such as Delete,
              the response is [google.protobuf.Empty](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty).
              If the original method is the standard Create/Update,
              the response should be the target resource of the operation.
              Any method that returns a long-running operation should document the response type, if any.
            type: object
    ResourcesSpec:
      type: object
      properties:
        memory:
          description: |-
            Amount of memory available to the node, specified in bytes.

            Acceptable values are 0 to 274877906944, inclusive.
          type: string
          format: int64
        cores:
          description: |-
            Number of cores available to the node.

            Value must be one of 0, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30 or 32.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the possibility to burst performance above that baseline level.
            This field sets baseline performance for each core.

            Value must be one of 0, 5, 20, 50 or 100.
          type: string
          format: int64
    ScalePolicy:
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: Fixed scale policy of the node group.
    ScalePolicyFixedScale:
      type: object
      properties:
        size:
          description: |-
            Number of nodes in the node group.

            Acceptable values are 0 to 100, inclusive.
          type: string
          format: int64
    SchedulingPolicy:
      type: object
      properties:
        preemptible:
          description: |-
            True for preemptible compute instances. Default value is false. Preemptible compute instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    UpdateClusterMetadata:
      type: object
      properties:
        clusterId:
          description: ID of the Kubernetes cluster that is being updated.
          type: string
    UpdateClusterRequest:
      type: object
      allOf:
      - type: object
        properties:
          updateMask:
            $ref: '#/components/schemas/FieldMask'
          name:
            description: |-
              Name of the Kubernetes cluster.
              The name must be unique within the folder.

              Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
            type: string
          description:
            description: |-
              Description of the Kubernetes cluster.

              The maximum string length in characters is 256.
            type: string
          labels:
            description: |-
              Resource labels as `key:value` pairs.

              Existing set of `labels` is completely replaced by the provided set.

              No more than 64 per resource.
              The string length in characters for each key must be 1-63.
              Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
              The maximum string length in characters for each value is 63.
              Each value must match the regular expression `` [-_0-9a-z]* ``.
            type: object
            additionalProperties:
              type: string
      - title: internet_gateway
        type: object
        maxProperties: 1
        properties:
          gatewayIpv4Address:
            description: The maximum string length in characters is 15.
            type: string
    UpdateNodeGroupMetadata:
      type: object
      properties:
        nodeGroupId:
          description: |-
            Required.
            ID of the Node group that is being updated.
          type: string
    UpdateNodeGroupRequest:
      type: object
      properties:
        updateMask:
          $ref: '#/components/schemas/FieldMask_in_UpdateNodeGroupRequest_updateMask'
        name:
          description: |-
            Name of the node group.
            The name must be unique within the folder.

            Value must match the regular expression `` |[a-z][-a-z0-9]{1,61}[a-z0-9] ``.
          type: string
        description:
          description: |-
            Description of the node group.

            The maximum string length in characters is 256.
          type: string
        labels:
          description: |-
            Resource labels as `key:value` pairs.

            Existing set of `labels` is completely replaced by the provided set.

            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 63.
            Each value must match the regular expression `` [-_0-9a-z]* ``.
          type: object
          additionalProperties:
            type: string
        scalePolicy:
          $ref: '#/components/schemas/ScalePolicy_in_UpdateNodeGroupRequest_scalePolicy'
    ZonalMaster:
      type: object
      properties:
        zoneId:
          description: ID of the availability zone where the master resides.
          type: string
        internalV4Address:
          description: An IPv4 internal network address that is assigned to the master.
          type: string
        externalV4Address:
          description: An IPv4 external network address that is assigned to the master.
          type: string
    ZonalMasterSpec:
      type: object
      properties:
        zoneId:
          description: |-
            Required.
            ID of the availability zone.
          type: string
        internalV4AddressSpec:
          $ref: '#/components/schemas/InternalAddressSpec_in_ZonalMasterSpec_internalV4AddressSpec'
        externalV4AddressSpec:
          $ref: '#/components/schemas/ExternalAddressSpec_in_ZonalMasterSpec_externalV4AddressSpec'
    rpcStatus:
      description: The error result of the operation in case of failure or cancellation.
      type: object
      properties:
        code:
          description: Error code. An enum value of [google.rpc.Code](https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto).
          type: integer
          format: int32
        message:
          description: An error message.
          type: string
        details:
          description: A list of messages that carry the error details.
          type: array
          items:
            type: object
    NodeTemplate_in_CreateNodeGroupRequest_nodeTemplate:
      description: |-
        Required.
        Node template for creating the node group.
      type: object
      properties:
        platformId:
          description: |-
            ID of the hardware platform configuration for the node.

            Value must match the regular expression `` |standard-v1|standard-v2 ``.
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_NodeTemplate_resourcesSpec'
        bootDiskSpec:
          $ref: '#/components/schemas/DiskSpec_in_NodeTemplate_bootDiskSpec'
        metadata:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 131072.
          type: object
          additionalProperties:
            type: string
        v4AddressSpec:
          $ref: '#/components/schemas/NodeAddressSpec_in_NodeTemplate_v4AddressSpec'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_NodeTemplate_schedulingPolicy'
    ScalePolicy_in_CreateNodeGroupRequest_scalePolicy:
      description: |-
        Required.
        Scale policy of the node group.
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: Fixed scale policy of the node group.
    NodeGroupAllocationPolicy_in_CreateNodeGroupRequest_allocationPolicy:
      description: Allocation policy of the node group by the zones and regions.
      type: object
      properties:
        locations:
          description: List of locations where resources for the node group will be
            allocated.
          type: array
          items:
            $ref: '#/components/schemas/NodeGroupLocation'
    OneToOneNatSpec_in_NodeAddressSpec_oneToOneNatSpec:
      description: One-to-one NAT configuration. Setting up one-to-one NAT ensures
        that public IP addresses are assigned to nodes, and therefore internet is
        accessible for all nodes of the node group. If the field is not set, NAT will
        not be set up.
      type: object
      properties:
        ipVersion:
          $ref: '#/components/schemas/IpVersion_in_OneToOneNatSpec_ipVersion'
    NodeGroupStatus_in_NodeGroup_status:
      description: |-
        Status of the node group.

         - PROVISIONING: Node group is waiting for resources to be allocated.
         - RUNNING: Node group is running.
         - RECONCILING: Node group is waiting for some work to be done, such as upgrading node software.
         - STOPPING: Node group is being stopped.
         - STOPPED: Node group stopped.
         - DELETING: Node group is being deleted.
      type: string
      enum:
      - PROVISIONING
      - RUNNING
      - RECONCILING
      - STOPPING
      - STOPPED
      - DELETING
    NodeTemplate_in_NodeGroup_nodeTemplate:
      description: Node template that specifies parameters of the compute instances
        for the node group.
      type: object
      properties:
        platformId:
          description: |-
            ID of the hardware platform configuration for the node.

            Value must match the regular expression `` |standard-v1|standard-v2 ``.
          type: string
        resourcesSpec:
          $ref: '#/components/schemas/ResourcesSpec_in_NodeTemplate_resourcesSpec'
        bootDiskSpec:
          $ref: '#/components/schemas/DiskSpec_in_NodeTemplate_bootDiskSpec'
        metadata:
          description: |-
            No more than 64 per resource.
            The string length in characters for each key must be 1-63.
            Each key must match the regular expression `` [a-z][-_0-9a-z]* ``.
            The maximum string length in characters for each value is 131072.
          type: object
          additionalProperties:
            type: string
        v4AddressSpec:
          $ref: '#/components/schemas/NodeAddressSpec_in_NodeTemplate_v4AddressSpec'
        schedulingPolicy:
          $ref: '#/components/schemas/SchedulingPolicy_in_NodeTemplate_schedulingPolicy'
    ScalePolicy_in_NodeGroup_scalePolicy:
      description: Scale policy of the node group.  For more information, see [Scaling
        policy](/docs/compute/concepts/instance-groups/policies#scale-policy).
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: Fixed scale policy of the node group.
    NodeGroupAllocationPolicy_in_NodeGroup_allocationPolicy:
      description: Allocation policy by which resources for node group are allocated
        to zones and regions.
      type: object
      properties:
        locations:
          description: List of locations where resources for the node group will be
            allocated.
          type: array
          items:
            $ref: '#/components/schemas/NodeGroupLocation'
    ResourcesSpec_in_NodeTemplate_resourcesSpec:
      description: Computing resources of the node such as the amount of memory and
        number of cores.
      type: object
      properties:
        memory:
          description: |-
            Amount of memory available to the node, specified in bytes.

            Acceptable values are 0 to 274877906944, inclusive.
          type: string
          format: int64
        cores:
          description: |-
            Number of cores available to the node.

            Value must be one of 0, 1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30 or 32.
          type: string
          format: int64
        coreFraction:
          description: |-
            Baseline level of CPU performance with the possibility to burst performance above that baseline level.
            This field sets baseline performance for each core.

            Value must be one of 0, 5, 20, 50 or 100.
          type: string
          format: int64
    DiskSpec_in_NodeTemplate_bootDiskSpec:
      description: |-
        The metadata as `key:value` pairs assigned to this instance template. This includes custom metadata and predefined keys.

        For example, you may use the metadata in order to provide your public SSH key to the node.
        For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
      type: object
      properties:
        diskTypeId:
          description: |-
            ID of the disk type.

            Value must match the regular expression `` |network-ssd|network-hdd ``.
          type: string
        diskSize:
          description: |-
            Size of the disk, specified in bytes.

            Acceptable values are 0 to 4398046511104, inclusive.
          type: string
          format: int64
    NodeAddressSpec_in_NodeTemplate_v4AddressSpec:
      description: Specification for the create network interfaces for the node group
        compute instances.
      type: object
      properties:
        oneToOneNatSpec:
          $ref: '#/components/schemas/OneToOneNatSpec_in_NodeAddressSpec_oneToOneNatSpec'
    SchedulingPolicy_in_NodeTemplate_schedulingPolicy:
      description: Scheduling policy configuration.
      type: object
      properties:
        preemptible:
          description: |-
            True for preemptible compute instances. Default value is false. Preemptible compute instances are stopped at least once every 24 hours, and can be stopped at any time
            if their resources are needed by Compute.
            For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
          type: boolean
          format: boolean
    IpVersion_in_OneToOneNatSpec_ipVersion:
      description: |-
        IP version for the public IP address.

         - IPV4: IPv4 address, for example 192.168.0.0.
         - IPV6: IPv6 address, not available yet.
      type: string
      enum:
      - IPV4
      - IPV6
    FieldMask_in_UpdateNodeGroupRequest_updateMask:
      description: |-
        Field mask that specifies which fields of the node group are going to be updated.

        A comma-separated names off ALL fields to be updated.
        Оnly the specified fields will be changed. The others will be left untouched.
        If the field is specified in `` updateMask `` and no value for that field was sent in the request,
        the field's value will be reset to the default. The default value for most fields is null or 0.

        If `` updateMask `` is not sent in the request, all fields' values will be updated.
        Fields specified in the request will be updated to provided values.
        The rest of the fields will be reset to the default.
      type: string
    ScalePolicy_in_UpdateNodeGroupRequest_scalePolicy:
      description: Scale policy of the node group.
      type: object
      allOf:
      - title: scale_type
        type: object
        maxProperties: 1
        properties:
          fixedScale:
            $ref: '#/components/schemas/ScalePolicyFixedScale'
            description: Fixed scale policy of the node group.
    InternalAddressSpec_in_ZonalMasterSpec_internalV4AddressSpec:
      description: Specification of parameters for internal IPv4 networking.
      type: object
      properties:
        subnetId:
          description: ID of the subnet. If no ID is specified, and there only one
            subnet in specified zone, an address in this subnet will be allocated.
          type: string
    ExternalAddressSpec_in_ZonalMasterSpec_externalV4AddressSpec:
      description: Specification of parameters for external IPv4 networking.
      type: object
      properties: {}
tags:
- name: Cluster
  description: A set of methods for managing Kubernetes cluster.
- name: NodeGroup
  description: A set of methods for managing node groups.
